version: "3"

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - backend


  kafka:
    image: bitnami/kafka:3.4.0-debian-11-r21
    ports:
      - "9092:9092"
    environment:
      # **Disable KRaft** so Bitnami uses Zookeeper under the hood
      - KAFKA_ENABLE_KRAFT=false
      # point at our Zookeeper
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # advertise to your host machine
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - backend

  api:
    build: ./api
    ports:
      - "8008:8008"
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - PROMETHEUS_MULTIPROC_DIR=/tmp
      - PYTHONUNBUFFERED=1
    volumes:
      - /tmp:/tmp
    depends_on:
      - kafka
    networks:
      - backend

  triton:
    image: nvcr.io/nvidia/tritonserver:24.01-py3
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    volumes:
      - /Users/judyyy/proj1/models
    command: tritonserver --model-repository=/models --allow-http=true

  consumer:
    build: ./consumer
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - TRITON_URL=http://triton:8000
      - PROMETHEUS_MULTIPROC_DIR=/tmp
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

networks:
  backend:
    driver: bridge
